
import html2canvas from "html2canvas";
import { jsPDF } from "jspdf";
import { UserRoadmap } from "@/hooks/use-roadmap";

export async function exportElementToPDF(element: HTMLElement, filename: string): Promise<void> {
  try {
    const canvas = await html2canvas(element, {
      scale: 2,
      logging: false,
      useCORS: true,
    });
    
    const imgData = canvas.toDataURL('image/png');
    const pdf = new jsPDF({
      orientation: 'portrait',
      unit: 'mm',
      format: 'a4'
    });
    
    const imgProps = pdf.getImageProperties(imgData);
    const pdfWidth = pdf.internal.pageSize.getWidth();
    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;
    
    pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);
    pdf.save(filename);
    
    return;
  } catch (error) {
    console.error("Error exporting PDF:", error);
    throw error;
  }
}

export async function exportRoadmapToPDF(roadmap: UserRoadmap): Promise<void> {
  // Create a temporary element to render the roadmap for export
  const tempDiv = document.createElement('div');
  tempDiv.style.padding = '20px';
  tempDiv.style.width = '600px';
  tempDiv.style.backgroundColor = 'white';
  tempDiv.style.color = 'black';
  
  // Create the content for the PDF
  tempDiv.innerHTML = `
    <h1 style="font-size: 24px; margin-bottom: 16px;">${roadmap.title} Career Roadmap</h1>
    <p style="margin-bottom: 24px;">Your personalized career path</p>
    <div style="margin-bottom: 20px;">
      <div style="height: 10px; background-color: #e0e0e0; border-radius: 5px;">
        <div style="height: 100%; width: ${calculateProgress(roadmap)}%; background-color: #a855f7; border-radius: 5px;"></div>
      </div>
      <p style="text-align: right; margin-top: 5px;">${calculateProgress(roadmap)}% complete</p>
    </div>
    <ul style="padding-left: 20px;">
      ${roadmap.steps.map(step => `
        <li style="margin-bottom: 16px; padding: 10px; border: 1px solid #e0e0e0; border-radius: 5px; list-style-type: none;">
          <div style="display: flex; align-items: center;">
            <div style="width: 20px; height: 20px; border: 2px solid ${step.completed ? '#a855f7' : '#e0e0e0'}; border-radius: 50%; margin-right: 10px; display: flex; align-items: center; justify-content: center;">
              ${step.completed ? 'âœ“' : ''}
            </div>
            <div>
              <p style="margin: 0; font-weight: ${step.completed ? 'bold' : 'normal'};">${step.label}</p>
              <p style="margin: 5px 0 0 0; font-size: 12px; color: #666;">Est. time: ${step.estTime}</p>
            </div>
          </div>
        </li>
      `).join('')}
    </ul>
    <div style="margin-top: 40px; font-size: 12px; color: #666;">
      <p>Generated by CareerMap on ${new Date().toLocaleDateString()}</p>
    </div>
  `;
  
  // Append to the document temporarily
  document.body.appendChild(tempDiv);
  
  // Export to PDF
  try {
    await exportElementToPDF(tempDiv, `${roadmap.title} Roadmap.pdf`);
  } finally {
    // Clean up
    document.body.removeChild(tempDiv);
  }
}

// Helper function to calculate progress percentage
function calculateProgress(roadmap: UserRoadmap): number {
  if (!roadmap.steps.length) return 0;
  const completedSteps = roadmap.steps.filter(step => step.completed).length;
  return Math.round((completedSteps / roadmap.steps.length) * 100);
}
